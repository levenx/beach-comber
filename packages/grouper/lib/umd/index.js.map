{"version":3,"file":"index.js","sources":["../../src/components/preview/index.tsx","../../src/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport classnames from 'classnames';\nimport { marked } from 'marked';\nimport './index.less';\n\ninterface PreviewProps {\n    onClose: () => void;\n    title: string;\n    content: string;\n}\n\nexport default function Preview(props: PreviewProps) {\n    const { onClose, title, content } = props;\n    const [visible, setVisible] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setVisible(true);\n        }, 0);\n    }, [])\n\n    const article = useMemo(() => {\n        return marked(content)\n    }, [content]);\n\n    return (\n        <div className={classnames(\"grouper-preview\", { \"grouper-preview--visible\": visible })}>\n            <div className=\"grouper-preview__title\">\n                <span className=\"title\">{title}</span>\n                <span className=\"close\" onClick={() => {\n                    setVisible(false);\n                    setTimeout(() => {\n                        onClose()\n                    }, 300);\n                }}>x</span>\n            </div>\n            <div className=\"grouper-preview__content\" dangerouslySetInnerHTML={{ __html: article }} />\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Preview from '@/components/preview';\n\nexport interface GrouperDocConfig {\n    root?: HTMLElement;\n    title?: string;\n    content?: string;\n}\n\nexport default class GrouperDoc {\n\n    config;\n\n    root;\n\n    constructor(config: GrouperDocConfig) {\n        this.config = config;\n    }\n\n    destory() {\n        ReactDOM.unmountComponentAtNode(this.root);\n    }\n\n    render(config: GrouperDocConfig) {\n        const { title, content, root } = config;\n        let div = root;\n        if (!root) {\n            div = document.createElement('div');\n            document.body.appendChild(div);\n        }\n        this.root = div;\n        const App = <Preview onClose={this.destory.bind(this)} title={title} content={content} />;\n        ReactDOM.render(App, div)\n    }\n\n}\n"],"names":["useState","useEffect","useMemo","marked","React","classnames","ReactDOM"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;WAWwB,OAAO,CAAC,KAAmB;MACvC,IAAA,OAAO,GAAqB,KAAK,QAA1B,EAAE,KAAK,GAAc,KAAK,MAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;MACpC,IAAA,KAAwBA,cAAQ,CAAC,KAAK,CAAC,EAAtC,OAAO,QAAA,EAAE,UAAU,QAAmB,CAAC;MAE9CC,eAAS,CAAC;UACN,UAAU,CAAC;cACP,UAAU,CAAC,IAAI,CAAC,CAAC;WACpB,EAAE,CAAC,CAAC,CAAC;OACT,EAAE,EAAE,CAAC,CAAA;MAEN,IAAM,OAAO,GAAGC,aAAO,CAAC;UACpB,OAAOC,aAAM,CAAC,OAAO,CAAC,CAAA;OACzB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;MAEd,QACIC,iDAAK,SAAS,EAAEC,8BAAU,CAAC,iBAAiB,EAAE,EAAE,0BAA0B,EAAE,OAAO,EAAE,CAAC;UAClFD,iDAAK,SAAS,EAAC,wBAAwB;cACnCA,kDAAM,SAAS,EAAC,OAAO,IAAE,KAAK,CAAQ;cACtCA,kDAAM,SAAS,EAAC,OAAO,EAAC,OAAO,EAAE;sBAC7B,UAAU,CAAC,KAAK,CAAC,CAAC;sBAClB,UAAU,CAAC;0BACP,OAAO,EAAE,CAAA;uBACZ,EAAE,GAAG,CAAC,CAAC;mBACX,QAAU,CACT;UACNA,iDAAK,SAAS,EAAC,0BAA0B,EAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,GAAI,CACxF,EACT;EACL;;;MCvBI,oBAAY,MAAwB;UAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;OACxB;MAED,4BAAO,GAAP;UACIE,4BAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAC9C;MAED,2BAAM,GAAN,UAAO,MAAwB;UACnB,IAAA,KAAK,GAAoB,MAAM,MAA1B,EAAE,OAAO,GAAW,MAAM,QAAjB,EAAE,IAAI,GAAK,MAAM,KAAX,CAAY;UACxC,IAAI,GAAG,GAAG,IAAI,CAAC;UACf,IAAI,CAAC,IAAI,EAAE;cACP,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;cACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAClC;UACD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;UAChB,IAAM,GAAG,GAAGF,wCAAC,OAAO,IAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,GAAI,CAAC;UAC1FE,4BAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;OAC5B;MAEL,iBAAC;EAAD,CAAC;;;;;;;;"}